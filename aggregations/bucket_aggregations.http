###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "status_terms": {
            "terms": {
                "field": "status.keyword"
            }
        }
    }
}

#
# Buckets which are not at top left outside of the response
#
###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "status_terms": {
            "terms": {
                "field": "salesman.id"                
            }
        }
    }
}


###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "status_terms": {
            "terms": {
                "field": "status.keyword",
                "missing": "N/A",
                "min_doc_count": "0",
                "order": {
                    "_term": "asc"
                }
            }
        }
    }
}


###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "query":{
        "range":{
            "total_amount" : {
                "gte": "100"
            }
        }
    },
    "aggs": {
        "status_terms": {
            "terms": {
                "field": "status.keyword"
            },
            "aggs":{
                "status_stats":{
                    "stats": {
                        "field": "total_amount"
                    }
                }
            }
        }
    }
}

###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "low_value": {
            "filter": {
                "range": {
                    "total_amount": {
                        "lte": 50
                    }
                }
            },        
            "aggs": {
                "avg_amount": {
                    "avg": {
                        "field": "total_amount"
                    }
                }
            }
        }
    }
}

#
# Aggregating on filter defined buckets
#
###
GET http://{{$dotenv ELASTIC}}/recipes/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "my_filter":{
            "filters":{
                "filters": {
                    "pasta": {
                        "match": {
                            "title": "pasta"
                        }
                    },
                    "spaghetti":{
                        "match": {
                            "title": "spaghetti"
                        }
                    }
                }
            },
            "aggs": {
                "avg_rating":{
                    "avg": {
                        "field": "ratings"
                    }
                }
            }
        }
    }
}

#
# Range aggregations
#
###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "amount_distribution":{
            "range":{
                "field":"purchased_at",
                "ranges":[
                    {
                        "to": 50
                    },
                    {
                        "from":50,
                        "to":100
                    },
                    {
                        "from":100
                    }
                ]
            }
        }
    }
}

###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "time_backets": {
            "date_range":{
                "field": "purchased_at",
                "format": "yyyy-MM-dd",
                "keyed":"true",
                "ranges":[
                    {
                        "from":"2016-01-01",
                        "to":"2016-01-01||+6M",
                        "key":"first_half"
                    },
                    {
                        "from":"2016-01-01||+6M",
                        "to":"2016-01-01||+1y",
                        "key":"second_half"
                    }                   
                ]
            }
        }
    }
}

###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
    "size": 0,
    "aggs": {
        "time_backets": {
            "date_range":{
                "field": "purchased_at",
                "format": "yyyy-MM-dd",
                "keyed":"true",
                "ranges":[
                    {
                        "from":"2016-01-01",
                        "to":"2016-01-01||+6M",
                        "key": "first_half"
                    },
                    {
                        "from":"2016-01-01||+6M",
                        "to":"2016-01-01||+1y",
                        "key": "second_half"
                    }                   
                ]
            },
            "aggs": {
                "bucket_stats":{
                    "stats": {
                        "field": "total_amount"
                    }
                }
            }
        }
    }
}


#
# https://github.com/codingexplained/complete-guide-to-elasticsearch/blob/master/Aggregations/range-aggregations.md#adding-a-sub-aggregation
#
###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
  "size": 0,
  "aggs": {
    "purchased_ranges": {
      "date_range": {
        "field": "purchased_at",
        "format": "yyyy-MM-dd",
        "keyed": true,
        "ranges": [
          {
            "from": "2016-01-01",
            "to": "2016-01-01||+6M",
            "key": "first_half"
          },
          {
            "from": "2016-01-01||+6M",
            "to": "2016-01-01||+1y",
            "key": "second_half"
          }
        ]
      },
      "aggs": {
        "bucket_stats": {
          "stats": {
            "field": "total_amount"
          }
        }
      }
    }
  }
}

#
# Histogram filtering
#
###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
  "size": 0,
  "query":{
      "range": {
          "total_amount" :{
              "gte": 100
          }
      }
  },
  "aggs": {
      "amount_distribution":{
          "histogram":{
          "field": "total_amount",
          "interval": 25,
          "min_doc_count": 1
        }
      }
  }
}

#
# Histogram with predefined number of backets
#
###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
  "size": 0,
  "query":{
      "range": {
          "total_amount" :{
              "gte": 100
          }
      }
  },
  "aggs": {
      "amount_distribution":{
          "histogram":{
          "field": "total_amount",
          "interval": 25,
          "min_doc_count": 0,
          "extended_bounds":{
              "min":0,
              "max":500
          }
        }
      }
  }
}

#
# Date histogram
#
###
GET http://{{$dotenv ELASTIC}}/order/_search?format=yaml
Content-Type: application/json

{
  "size": 0,  
  "aggs": {
      "orders_over_time":{
          "date_histogram":{
            "field": "purchased_at",
            "interval": "month",
            "format": "yyyy, MMM"
        }
      }
  }
}